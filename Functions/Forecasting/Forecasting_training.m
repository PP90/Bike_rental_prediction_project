function [ net ] = Forecasting_training( input_features, target_vector, max_delays, min_n_neurons, max_n_neurons )
%UNTITLED2 Summary of this function goes here
%   Detailed explanation goes here
% Solve an Autoregression Problem with External Input with a NARX Neural Network
% Script generated by NTSTOOL
% Created Fri Sep 04 11:14:27 CEST 2015
%
% This script assumes these variables are defined:
%
%   best_features_2011 - input time series.
%   cnt_2011 - feedback time series.
performance_matrix=zeros(1,max_n_neurons-min_n_neurons+1);
inputSeries = tonndata(input_features,false,false);
targetSeries = tonndata(target_vector,false,false);

% Create a Nonlinear Autoregressive Network with External Input
inputDelays = 1:max_delays;
feedbackDelays = 1:max_delays;
   fprintf('inputDelays ');
   disp(inputDelays);
for n=min_n_neurons:max_n_neurons

hiddenLayerSize = n;
 fprintf('\nHidden neurons: %d\n',hiddenLayerSize);
net = narxnet(inputDelays,feedbackDelays,hiddenLayerSize);

% Prepare the Data for Training and Simulation
% The function PREPARETS prepares timeseries data for a particular network,
% shifting time by the minimum amount to fill input states and layer states.
% Using PREPARETS allows you to keep your original time series data unchanged, while
% easily customizing it for networks with differing numbers of delays, with
% open loop or closed loop feedback modes.
[inputs,inputStates,layerStates,targets] = preparets(net,inputSeries,{},targetSeries);

% Setup Division of Data for Training, Validation, Testing
net.divideParam.trainRatio = 70/100;
net.divideParam.valRatio = 15/100;
net.divideParam.testRatio = 15/100;

% Train the Network
[net,tr] = train(net,inputs,targets,inputStates,layerStates);

% Test the Network
outputs = net(inputs,inputStates,layerStates);
MSE = perform(net,targets,outputs);
disp(MSE);
end
% Plots
% Uncomment these lines to enable various plots.
%figure, plotperform(tr)
%figure, plottrainstate(tr)
%figure, plotregression(targets,outputs)
%figure, plotresponse(targets,outputs)
%figure, ploterrcorr(errors)
%figure, plotinerrcorr(inputs,errors)

end

